@import "../../assets/styles/_mixin";
// Layout
$layout-post-single-max-width: 945px;
$layout-post-single-width: $layout-post-single-max-width - 305px;

$columnW-tablet: 10;
$columnL-tablet: 1;
$picW-tablet: 4;

$columnW-wide-desktop: 8;
$columnL-wide-desktop: 2;
$picW-wide-desktop: 4;

.post-single {
  @include col(1 to 12 of 12);

  @include mediaQuery($min, $tablet) {
    @include col(
      (1 + $columnL-tablet) to ($columnL-tablet + $columnW-tablet),
      $push: $columnL-tablet
    );
  }

  @include mediaQuery($min, $wide-desktop) {
    @include col(
      (1 + $columnL-wide-desktop) to ($columnL-wide-desktop + $columnW-wide-desktop),
      $push: $columnL-wide-desktop
    );
  }

  .grid,
  .wide-grid {
    @include mediaQuery($min, $tablet) {
      div[class^="col-"] {
        z-index: 90;
      }

      position: relative;

      &.bg {
        margin-top: 2rem;
        margin-bottom: 2rem;
        padding-top: 2rem;

        &:before {
          z-index: 10;
          content: " ";
          position: absolute;
          width: 100vw;
          height: 100%;
          left: 50%;

          margin-left: -50vw;

          background-color: rgb(230, 230, 230);
          margin-top: 0rem;

          display: block;
        }
      }
    }
  }
  .grid {
    @include container(8);

    div[class^="col-"] {
      @include col(1 to 8 of 8);
    }

    @include mediaQuery($min, $tablet) {
      div.col-1to4 {
        @include col(1 to 4 of 8);
      }
      div.col-5to8 {
        @include col(5 to 8 of 8);
      }
    }
  }

  .wide-grid {
    @include container(12);

    div[class^="col-"] {
      @include col(1 to 12);
    }

    @include mediaQuery($min, $desktop) {
      div.col-1to3 {
        @include col(1 to 3);
      }
      div.col-1to4 {
        @include col(1 to 4);
      }
      div.col-1to5 {
        @include col(1 to 5);
      }
      div.col-1to6 {
        @include col(1 to 6);
      }
      div.col-1to7 {
        @include col(1 to 7);
      }
      div.col-1to8 {
        @include col(1 to 8);
      }
      div.col-2to12 {
        @include col(2 to 12);
      }
      div.col-5to12 {
        @include col(5 to 12);
      }
      div.col-5to8 {
        @include col(5 to 8);
      }
      div.col-6to12 {
        @include col(6 to 12);
      }
      div.col-7to12 {
        @include col(7 to 12);
      }
      div.col-8to12 {
        @include col(8 to 12);
      }
      div.col-9to12 {
        @include col(9 to 12);
      }

      div.col-4to6 {
        @include col(4 to 6);
      }
      div.col-4to12 {
        @include col(4 to 12);
      }
      div.col-7to9 {
        @include col(7 to 9);
      }

      div.col-10to12 {
        @include col(10 to 12);
      }
      div.col-1to12 {
        @include col(1 to 12);
      }

      margin-left: 0 - span($columnL-tablet of $columnW-tablet) - gutter($columnW-tablet);
      width: span(12 of $columnW-tablet);
    }

    @include mediaQuery($min, $wide-desktop) {
      margin-left: 0 - span($columnL-wide-desktop of $columnW-wide-desktop) -
        gutter($columnW-wide-desktop);
      width: span(12 of $columnW-wide-desktop);
    }
  }

  // inline floating images
  .float-left,
  .float-right {
    @include mediaQuery($min, $tablet) {
      padding-top: 0.6rem;
      width: span($picW-tablet of $columnW-tablet);
    }

    @include mediaQuery($min, $wide-desktop) {
      width: span($picW-wide-desktop of $columnW-wide-desktop);
    }
  }

  .float-right {
    @include mediaQuery($min, $tablet) {
      float: right;
      padding-left: gutter($columnW-tablet);
      margin-right: 0 - span(1 of $columnW-tablet) - gutter($columnW-tablet);
    }

    @include mediaQuery($min, $wide-desktop) {
      padding-left: gutter($columnW-wide-desktop);
      margin-right: 0 - span(1 of $columnW-wide-desktop) - gutter($columnW-wide-desktop);
    }
  }
  .float-left {
    @include mediaQuery($min, $tablet) {
      float: left;
      padding-right: gutter($columnW-tablet);
      margin-left: 0 - span(1 of $columnW-tablet) - gutter($columnW-tablet);
    }

    @include mediaQuery($min, $wide-desktop) {
      padding-right: gutter($columnW-wide-desktop);
      margin-left: 0 - span(1 of $columnW-wide-desktop) - gutter($columnW-wide-desktop);
    }
  }

  &__category {
    padding-top: 1rem;
    font-size: map-get($fontFactors, small);
    color: $color-base;

    &:hover,
    &:focus {
      color: $color-primary;
      border-bottom: 2px solid $color-primary;
    }
  }

  &__meta {
    margin-top: 0rem;
    margin-bottom: 2rem;
    text-align: right;
    &-dot {
      width: 0.8rem;
      display: inline-block;
      text-align: center;
    }
  }

  &__lead {
    padding-top: 1rem;
    margin-bottom: 6rem;
    p {
      @include font-bold(sans);
      font-size: map-get($fontFactors, p);

      @include mediaQuery($min, $desktop) {
        padding-left: span(2 of 8) + gutter(8);
        // padding-bottom: 6rem;
      }
    }
  }

  &__body {
    ul {
      li {
        > p {
          // na extra space in lists
          margin-bottom: 0;
        }
      }
    }

    a {
      color: #006984;

      &:visited {
        color: #0054a2;
      }

      &:hover {
        color: black;
      }

      a:before {
        content: "â†’ ";
      }
    }

    // hide arrow before external links
    a[href^="http"]:before,
    a[href^="slack:"]:before,
    a[href^="mailto:"]:before,
    a[href^="tel:"]:before {
      display: none;
    }
  }

  &__footer,
  &__footer p {
    font-size: map-get($fontFactors, small);
  }

  &__tags {
    ul {
      font-size: 0.75rem;
    }
    &-list {
      list-style: none;
      // margin: 0 -5px;
      padding: 0;
      &-item {
        display: inline-block;
        // margin: 10px 5px;
        height: 1.45rem;
        border-radius: .8rem;

        background: $color-gray-bg;
        padding-top: 0.15rem;
        padding-right: 0.6rem;
        padding-left: 0.6rem;

        margin-right: 0.3rem;

        &:hover,
        &:focus {
          background: darken($color-gray-bg, 5%);
        }

        &-link {
          text-decoration: none;
          border: 0;
          color: lighten($color-base, 20%);
          &:hover,
          &:focus {
            color: $color-base;
          }
        }
      }
    }
  }
}
